%Script to create the figure plot
global CObject AppData FigData Flags MRData MyHands

IconLocation = [pwd '\Radar.png'];

if isfield(CObject,'PlotFig')
delete(CObject.PlotFig);    
end

CObject.PlotFig = figure(...
             'Units', FigData.Units,...
             'Position', FigData.Size,...
             'NumberTitle', 'off',...
             'Resize', 'off',...
             'CloseRequestFcn',@ClosePlotFig,...
             'Name',FigData.FigMenuBar,...
             'Color',FigData.Color,...
             'MenuBar', 'none' );

SetFigIcon(CObject.PlotFig,IconLocation);        
CObject.PlotFig.Visible = 'On';    
PutAxDown(CObject.PlotFig);

if Flags.ViewOnly == 0
mf = uimenu(CObject.PlotFig,'Label','File');
CObject.mfsubImp = uimenu(mf,'Label','Import');
CObject.ImpTxt = uimenu(CObject.mfsubImp,'Label','Text File...', ...
                        'Callback',@ImpText_Callback,'Accelerator','I');
CObject.ImpRSMS = uimenu(CObject.mfsubImp,'Label','RSMS File...', ...
                        'Callback',@ImpRSMS_Callback,'Accelerator','J');
uimenu(CObject.mfsubImp,'Label','Manual Data','Callback',@UserDefinedWaveform,'Accelerator','M');       
uimenu(mf,'Label','Save','Callback',@Save_1_Callback,'Accelerator','S');  
uimenu(mf,'Label','Save As','Callback',@ SaveAs_1,'Accelerator','A');  
mR = uimenu(CObject.PlotFig,'Label','Report');
uimenu(mR,'Label','Summary','Callback',@ SumReport,'Accelerator','R');  
end

        if isfield(AppData,'Fm')
        

            if isempty(AppData.Fm)

                  if strcmp(AppData.FRQLow,'0000.0') || strcmp(AppData.FRQHi,'0000.00') 
                  AppData.SpanSet = [];
                  %AskForInput({'Enter span of plot (MHz)'});
                  %waitfor(CObject.InptDLG);
                  if ischar(AppData.FC)
                      if str2double(AppData.FC)< 8000
                      AppData.SpanSet = str2double(AppData.FC)/12.5;   
                      else
                      AppData.SpanSet = str2double(AppData.FC)/2;
                      end
                  FC = str2double(AppData.FC);
                  else
                      if AppData.FC < 8000
                      AppData.SpanSet = AppData.FC/4;
                      else
                      AppData.SpanSet = AppData.FC/2;
                      end
                  FC = AppData.FC;
                  end
                  p = AppData.SpanSet;
                  AppData.xmin = FC - p/2;
                  AppData.xmax = FC + p/2;
                  CObject.EBox4.String = num2str(AppData.xmin);
                  CObject.EBox5.String = num2str(AppData.xmax);
                  AppData.FRQLow = num2str(AppData.xmin);
                  AppData.FRQHi = num2str(AppData.xmax);
                  refresh(MyHands.MainHand);   
                  CObject.PlotAX1.XLim = [AppData.xmin AppData.xmax];
                  
                  else
                  p = str2double(AppData.FRQHi)- str2double(AppData.FRQLow);
                  AppData.xmin = str2double(AppData.FRQLow);
                  AppData.xmax = str2double(AppData.FRQHi);
                  set(CObject.PlotAX1,'xlim',[AppData.xmin AppData.xmax]);
                  end

                  if isempty(p)|| isnan(p)
                  ed = errordlg('Closing Application.. Please Save!','Crash 101');
                  SetFigIcon(ed,IconLocation);
                  waitfor(ed);
                  Flags.PageFlag = 1;
                  Exit1();
                  return
                  end


                  if ischar(AppData.FC)
                  AppData.FC = str2double(AppData.FC);    
                  end

            AppData.Fm = linspace((AppData.FC)-p/2,(AppData.FC)+p/2,1000);
            AppData.Sm = -80*ones(size(AppData.Fm));
            end

        else
            if ~isempty(AppData.Fm)
            AppData.xmin = min(AppData.Fm);
            AppData.xmax = max(AppData.Fm);
            set(CObject.PlotAX1,'xlim',[AppData.xmin AppData.xmax]);  
            else
            ed = errordlg('The Setup File is corupt!,Line 64 StartRCT');
            SetFigIcon(ed,IconLocation);
            waitfor(ed);
            return
            end
        end


CObject.TogNormIF = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Normalize',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','normalIF',...
             'Callback',@NormRes,...
             'Position',[15 205 70 25]);  
         
CObject.TogNormIF.Visible = 'Off';

             TIM1 = uicontextmenu;
             CObject.TogNormIF.UIContextMenu = TIM1;
             txt(1)={'Toggles frequency axis to normalize Fo'};
             txt(2)={''};
             txt(3)={''};
             uimenu(TIM1,'Label','Info','Callback',@Info_All,'UserData',txt);
         
        
CObject.TogResBW = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Res BW',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleResBW',...
             'Callback',@ResBW,...
             'Position',[ 15 240 70 25]);         

CObject.TogResBW.Visible = 'Off';

             TIM2 = uicontextmenu;
             CObject.TogResBW.UIContextMenu = TIM2;
             txt(1)={'Toggles measurement resolution bandwidth (MHz) on/off'};
             txt(2)={''};
             txt(3)={''};
             uimenu(TIM2,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.TogTitle = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Title',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleTitle',...
             'Callback',@TitleTog,...
             'Position',[ 15 135 70 25]);         

CObject.TogTitle.Visible = 'Off';

             TIM3 = uicontextmenu;
             CObject.TogTitle.UIContextMenu = TIM3;
             txt(1)={'Toggles title on/off'};
             txt(2)={''};
             txt(3)={''};
             uimenu(TIM3,'Label','Info','Callback',@Info_All,'UserData',txt);
             
CObject.Overage = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Overage',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleoverage',...
             'Callback',@OverTog,...
             'Position',[ 15 345 70 25]);   
             
CObject.Overage.Visible = 'Off';

             TIM4 = uicontextmenu;
             CObject.Overage.UIContextMenu = TIM4;
             txt(1)={'Toggles red overage and green underage circle indicators on/off'};
             txt(2)={'Used to indicate if and where emission exceeds proposed RSEC mask'};
             txt(3)={''};
             uimenu(TIM4,'Label','Info','Callback',@Info_All,'UserData',txt);


CObject.Legacy = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Legacy',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleLegacy',...
             'Callback',@LegacyTog,...
             'Position',[ 15 310 70 25]);         

CObject.Legacy.Visible = 'Off';

             TIM5 = uicontextmenu;
             CObject.Legacy.UIContextMenu = TIM5;
             txt(1)={'Toggles Legacy RSEC mask on/off'};
             txt(2)={''};
             txt(3)={''};
             uimenu(TIM5,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.Mask = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Mask FC',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleFCMask',...
             'Callback',@MaskTog,...
             'Position',[ 15 275 70 25]);         

CObject.Mask.Visible = 'Off';

             TIM6 = uicontextmenu;
             CObject.Mask.UIContextMenu = TIM6;
             txt(1)={'Toggles RSEC Mask center frequency.'};
             txt(2)={'Toggles between FC, and that corresponding to'};
             txt(3)={'lowest power overage'};
             uimenu(TIM6,'Label','Info','Callback',@Info_All,'UserData',txt);
             
CObject.Theory = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Theory',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleTheory',...
             'Callback',@TheoryTog,...
             'Position',[ 15 415 70 25]);         

CObject.Theory.Visible = 'Off';

             TIM7 = uicontextmenu;
             CObject.Theory.UIContextMenu = TIM7;
             txt(1) = {'Displays the theorized waveform equivlent.'};
             txt(2) = {''};
             txt(3) = {''};
             uimenu(TIM7,'Label','Info','Callback',@Info_All,'UserData',txt);
             
CObject.Measured = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Measured',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleMeasured',...
             'Callback',@MeasuredTog,...
             'Position',[ 15 450 70 25]);         

CObject.Measured.Visible = 'Off';
                
              TIM8 = uicontextmenu;
              CObject.Measured.UIContextMenu = TIM8;
              txt(1)={'Toggles display of measured data, if loaded, on/off'};
              txt(2)={'Used to indicate if and where emission exceeds proposed RSEC mask'};
              txt(3)={''};
              uimenu(TIM8,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.Legend = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Legend',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleLegend',...
             'Callback',@LegendTog,...
             'Position',[15 170 70 25]);   
         
CObject.Legend.Visible = 'Off';

              TIM9 = uicontextmenu;
              CObject.Legend.UIContextMenu = TIM9;
              txt(1)={'Toggles legend on/off'};
              txt(2)={''};
              txt(3)={''};
              uimenu(TIM9,'Label','Info','Callback',@Info_All,'UserData',txt);
              
CObject.CustomMask = uicontrol(CObject.PlotFig,'Style','togglebutton',...
             'FontWeight','bold',... 
             'String','Custom MK',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','toggleCustom',...
             'Callback',@CustomTog,...
             'Position',[ 15 380 70 25]);         

CObject.CustomMask.Visible = 'Off';

             TIM10 = uicontextmenu;
             CObject.CustomMask.UIContextMenu = TIM10;
             txt(1)={'Allows user creation of a custom mask'};
             txt(2)={'For information only - NOT VALID FOR RSEC COMPLIANCE'};
             txt(3)={'(optional)'};
             uimenu(TIM10,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.Criteria = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','Criteria',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','CritLab',...
             'Position',[815 450 70 17]); %'Callback',@pbCriteria_Callback,... 
         
CObject.Criteria.Visible = 'Off';   

             MKI11 = uicontextmenu;
             CObject.Criteria.UIContextMenu = MKI11;
             txt(1)={'Enters RSEC recommended criteria identifier for proposed RSEC mask'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI11,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.CPU = uicontrol(CObject.PlotFig,'Style','popupmenu',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'String',{'A','B','C','D',...
             'E','F'},...
             'Enable','off',...
             'Callback',@CriteriaPU_Callback,...
             'HorizontalAlignment','left',...
             'Position',[832 400 35 50]);  
         
CObject.CPU.Visible = 'Off';  

             MKI10 = uicontextmenu;
             CObject.CPU.UIContextMenu = MKI10;
             txt(1)={'Enter RSEC Criteria for proposed RSEC mask'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(MKI10,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.BWCndB = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','BW@40dB',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','BW40dBLab',...
             'Position',[814 400 75 17]);  %'Callback',@pbbwRSECn_Callback,...
         
CObject.BWCndB.Visible = 'Off'; 

             MKI9 = uicontextmenu;
             CObject.BWCndB.UIContextMenu = MKI9;
             txt(1)={'Enters proposed RSEC recommended mask 40 dB bandwidth (MHz)'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI9,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.BWCnEB1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@bwRSECn1_Callback,...
             'HorizontalAlignment','left',...
             'Enable','off',...
             'Position',[825 380 50 20]); 
         
CObject.BWCnEB1.Visible = 'Off';  

             MKI8 = uicontextmenu;
             CObject.BWCnEB1.UIContextMenu = MKI8;
             txt(1)={'Enter proposed RSEC mask 40 dB bandwidth (MHz)'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(MKI8,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.Slope = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','Slope',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','SlopeToggle',...
             'Position',[815 355 70 17]);  %'Callback',@pbSlope_Callback,...
         
CObject.Slope.Visible = 'Off'; 

             MKI7 = uicontextmenu;
             CObject.Slope.UIContextMenu = MKI7;
             txt(1)={'Enters RSEC recommended absolute value of proposed RSEC mask slope (dB/decade)'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI7,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.SlopeB1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@slope1_Callback,...
             'HorizontalAlignment','left',...
             'Enable','off',...
             'Position',[825 335 50 20]); 
         
CObject.SlopeB1.Visible = 'Off'; 

             MKI6 = uicontextmenu;
             CObject.SlopeB1.UIContextMenu = MKI6;
             txt(1)={'Enter absolute value of proposed RSEC mask slope (dB/decade)'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(MKI6,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.Xdb = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','XdBc',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','XdBToggle',...
             'Position',[815 310 70 17]); %'Callback',@pbXdB_Callback,... 
         
CObject.Xdb.Visible = 'Off';  

             MKI5 = uicontextmenu;
             CObject.Xdb.UIContextMenu = MKI5;
             txt(1)={'Enters RSEC recommended minimum mask level (-dB)'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI5,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.XdB1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@xdb1_Callback,...
             'HorizontalAlignment','left',...
             'Enable','off',...
             'Position',[825 290 50 20]); 
         
CObject.XdB1.Visible = 'Off';

             MKI4 = uicontextmenu;
             CObject.XdB1.UIContextMenu = MKI4;
             txt(1)={'Enter minimum RSEC mask level (-dB)'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(MKI4,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.Pt = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','Pt',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','PtLab',...
             'Position',[815 265 70 17]); %'Callback',@pbPt_Callback,...  
         
CObject.Pt.Visible = 'Off';   

             MKI3 = uicontextmenu;
             CObject.Pt.UIContextMenu = MKI3;
             txt(1)={'Enters RSEC recommended maximum spectral power density (-dBm/kHz)'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI3,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.PtB1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@pt1_Callback,...
             'HorizontalAlignment','left',...
             'Enable','off',...
             'Position',[825 245 50 20]); 
         
CObject.PtB1.Visible = 'Off';  
 
             MKI2 = uicontextmenu;
             CObject.PtB1.UIContextMenu = MKI2;
             txt(1)={'Enter maximum spectral power density of emission (-dBm/kHz)'};
             txt(2)={''};
             txt(3)={'(optional field)'};
             uimenu(MKI2,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.Pg = uicontrol(CObject.PlotFig,'Style','text',...
             'FontWeight','bold',... 
             'String','PG',...
             'Units', FigData.Units,...
             'BackgroundColor',FigData.ButtonColor,...
             'Tag','PGLab',...
             'Position',[815 220 70 17]);  %'Callback',@pbPG_Callback,...
         
CObject.Pg.Visible = 'Off'; 

             MKI1 = uicontextmenu;
             CObject.Pg.UIContextMenu = MKI1;
             txt(1)={'Enters RSEC recommended processing gain (dB)'};
             txt(2)={''};
             txt(3)={''};
             uimenu(MKI1,'Label','Info','Callback',@Info_All,'UserData',txt);

CObject.PgB1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@pg1_Callback,...
             'HorizontalAlignment','left',...
             'Enable','off',...
             'Position',[825 200 50 20]); 
        
CObject.PgB1.Visible = 'Off';   
  

             MKI = uicontextmenu;
             CObject.PgB1.UIContextMenu = MKI;
             txt(1)={'Enter processing gain (dB)'};
             txt(2)={''};
             txt(3)={'(optional field)'};
             uimenu(MKI,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.Xmin1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@xmin1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[610 100 45 20]); 
         
CObject.Xmin1.Visible = 'Off';
 
             GSI5 = uicontextmenu;
             CObject.Xmin1.UIContextMenu = GSI5;
             txt(1)={'Used to set lower frequency limit (MHz).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI5,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.XStep1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@xstep1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[656 100 35 20]); 
         
CObject.XStep1.Visible = 'Off';   
 
             GSI4 = uicontextmenu;
             CObject.XStep1.UIContextMenu = GSI4;
             txt(1)={'Used to set frequency grid step size (MHz).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI4,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.Xmax1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@xmax1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[692 100 45 20]); 
         
 CObject.Xmax1.Visible = 'Off'; 
 
             GSI3 = uicontextmenu;
             CObject.Xmax1.UIContextMenu = GSI3;
             txt(1)={'Used to set upper frequency limit (MHz).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI3,'Label','Info','Callback',@Info_All,'UserData',txt); 
 
CObject.Ymin1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@ymin1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[747 130 30 20]); 
         
CObject.Ymin1.Visible = 'Off';
 
             GSI2 = uicontextmenu;
             CObject.Ymin1.UIContextMenu = GSI2;
             txt(1)={'Used to set lower power limit (dB).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI2,'Label','Info','Callback',@Info_All,'UserData',txt); 
 
CObject.YStep1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@ystep1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[747 150 30 20]); 
         
CObject.YStep1.Visible = 'Off';   
 
             GSI1 = uicontextmenu;
             CObject.YStep1.UIContextMenu = GSI1;
             txt(1)={'Used to set power grid step size (dB).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI1,'Label','Info','Callback',@Info_All,'UserData',txt); 

 
 CObject.Ymax1 = uicontrol(CObject.PlotFig,'Style','edit',...
             'BackgroundColor','white',...
             'FontWeight','bold',...
             'FontSize',9, ...
             'Callback',@ymax1_Callback,...
             'HorizontalAlignment','left',...
             'Position',[747 170 30 20]); 
            
 CObject.Ymax1.Visible = 'Off'; 
 
             GSI = uicontextmenu;
             CObject.Ymax1.UIContextMenu = GSI;
             txt(1)={'Used to set upper power limit (dB).'};
             txt(2)={''};
             txt(3)={'(required field)'};
             uimenu(GSI,'Label','Info','Callback',@Info_All,'UserData',txt);
 
CObject.ImportFileName = uicontrol(CObject.PlotFig,'Style', 'text', ...
                   'Position', [747,10,150,15], ...
                   'FontSize', 9, ...
                   'FontWeight', 'bold', ...
                   'ForegroundColor','blue',...
                   'BackgroundColor',[0.7 0.7 0.7],...
                   'HorizontalAlignment','left',...
                   'String','This Is a Test!!!');   
         
CObject.ImportFileName.Visible = 'Off';    
CObject.ImportFileName.String = MRData.DType;

CObject.BWFactor = uicontrol(CObject.PlotFig,'Style', 'text', ...
                   'Position', [10,10,85,15], ...
                   'FontSize', 9, ...
                   'FontWeight', 'bold', ...
                   'ForegroundColor','blue',...
                   'BackgroundColor',[0.7 0.7 0.7],...
                   'HorizontalAlignment','left',...
                   'String','000.00');
 
CObject.Note = uicontrol('Style','text',...
                   'FontSize',FigData.NoteFontSize,...
                   'FontAngle',FigData.NoteFontAngle,...
                   'FontWeight','normal',...
                   'BackgroundColor',FigData.Color,...
                   'String',FigData.Note,...
                   'Units', FigData.Units,...
                   'HorizontalAlignment','center',...
                   'Position',FigData.NoteSize);
               
CObject.Note2 = uicontrol(CObject.PlotFig,'Style','text',...
                   'FontSize',8,...
                   'FontAngle',FigData.NoteFontAngle,...
                   'FontWeight','bold',...
                   'BackgroundColor',FigData.Color,...
                   'String',FigData.Note2,...
                   'Units', FigData.Units,...
                   'HorizontalAlignment','center',...
                   'Position',FigData.NoteSize2); 
               
CObject.Note3 = uicontrol(CObject.PlotFig,'Style','text',...
                   'FontSize',14,...
                   'FontAngle','normal',...
                   'FontWeight','bold',...
                   'BackgroundColor',[0.3 0.75 0.93],...
                   'String',' RSEC Analysis Plot ',...
                   'Units', FigData.Units,...
                   'HorizontalAlignment','center',...
                   'Position',[2.5 570 905 25]);                
        
if Flags.ViewOnly == 0
CObject.TogNormIF.Visible = 'On'; 
CObject.TogResBW.Visible = 'On';
CObject.TogTitle.Visible = 'On';
CObject.Overage.Visible = 'On';
CObject.Legacy.Visible = 'On';
CObject.Mask.Visible = 'On';
CObject.Theory.Visible = 'On';
CObject.Measured.Visible = 'On';
CObject.Legend.Visible = 'On';
CObject.CustomMask.Visible = 'On';
CObject.Criteria.Visible = 'On';
CObject.CPU.Visible = 'On';
CObject.BWCndB.Visible = 'On';   
CObject.BWCnEB1.Visible = 'On';
CObject.Slope.Visible = 'On';   
CObject.SlopeB1.Visible = 'On'; 
CObject.Xdb.Visible = 'On';   
CObject.XdB1.Visible = 'On';  
CObject.Pt.Visible = 'On';
CObject.PtB1.Visible = 'On';
CObject.Pg.Visible = 'On'; 
CObject.PgB1.Visible = 'On'; 
CObject.Xmin1.Visible = 'On'; 
CObject.XStep1.Visible = 'On';
CObject.Xmax1.Visible = 'On';   
CObject.Ymin1.Visible = 'On';
CObject.YStep1.Visible = 'On';
CObject.Ymax1.Visible = 'On';

AppData = PlotRSEC(AppData,0);
Flags.LegacyHold = 0;
TitleDog(0);

end


%********************************* End ***********************************